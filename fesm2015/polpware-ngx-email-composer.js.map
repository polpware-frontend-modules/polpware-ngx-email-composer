{"version":3,"file":"polpware-ngx-email-composer.js","sources":["ng://@polpware/ngx-email-composer/lib/ngx-email-composer.module.ts","ng://@polpware/ngx-email-composer/lib/shared/email-composer-abstract.component.ts","ng://@polpware/ngx-email-composer/public-api.ts","ng://@polpware/ngx-email-composer/polpware-ngx-email-composer.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { TagInputModule } from 'ngx-chips';\n\n@NgModule({\n    declarations: [],\n    imports: [\n        TagInputModule\n    ],\n    exports: []\n})\nexport class NgxEmailComposerModule { }\n","import { ElementRef, ViewChild } from '@angular/core';\nimport { TagInputComponent } from 'ngx-chips';\n\nfunction isValidEmail(control: { value: any }) {\n    const value = control.value;\n    const re = /\\S+@\\S+\\.\\S+/;\n    if (re.test(value)) {\n        return null;\n    }\n    return {\n        'isValidEmail': true\n    };\n}\n\nfunction display_name(text: string) {\n    /* Remove all quotes \n       Remove whitespace, brackets, and commas from the ends. */\n    return text.replace(/(^[\\s,>]+)|\"|([\\s,<]+$)/g, '');\n}\n\nconst EmailPattern = /[a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*/g;\n\n/**\n * Parses the given string into an array of email entries.\n * Each entry is like user<user@gmail.com>\n * @param addr_list\n */\nexport function parseEmails(addr_list: string) {\n    /* Regex source:\n        https://html.spec.whatwg.org/multipage/forms.html#valid-e-mail-address\n    */\n    const emails = [];\n    let idx = 0;\n    let match: RegExpExecArray;\n    while (match = EmailPattern.exec(addr_list)) {\n        let display: string;\n        if (display = display_name(addr_list.substring(idx, match['index']))) {\n            emails.push('\"' + display + '\" ' + '<' + match[0] + '>');\n        }\n        else {\n            emails.push(match[0]);\n        }\n        idx = match['index'] + match[0].length;\n    }\n    return emails;\n}\n\n/**\n * Parses the given string into a list of email entries.\n * Each entry is just an email.\n * @param addr_list\n */\nexport function parseOnlyEmails(addr_list: string) {\n    const emails = [];\n    let match: RegExpExecArray;\n    while (match = EmailPattern.exec(addr_list)) {\n        emails.push(match[0]);\n    }\n    return emails;\n}\n\nexport abstract class EmailFormAbstractComponent {\n\n    @ViewChild('emailInputBox') emailInputBox: TagInputComponent;\n    @ViewChild('emailBody') emailBody: ElementRef;\n\n    public title: string;\n\n    public messageBody: string;\n\n    public emails: Array<any>;\n    public validators = [isValidEmail];\n    public errorMessages = {\n        'isValidEmail': 'Please input a valid email'\n    };\n\n    private disableFocusEvent: boolean;\n\n    constructor() {\n\n        this.title = 'Send out an email';\n        this.emails = [];\n        this.messageBody = '';\n\n        this.disableFocusEvent = false;\n    }\n\n    public get isSubmitDisabled(): boolean {\n        return this.emails.length === 0;\n    }\n\n    public abstract onSubmit(): void;\n\n    public onOutOfTagInput(evt: any) {\n\n        if (this.disableFocusEvent) {\n            return;\n        }\n\n        evt.preventDefault();\n        evt.stopPropagation();\n\n        // A tempory hack for fixing the focus issue\n        // on invoking the onAddingRequested method ...\n        const emails = parseEmails(this.emailInputBox.formValue);\n\n        emails.forEach(v => {\n            this.emails.push(v);\n        });\n\n        this.emailInputBox.setInputValue('');\n\n        // Jump to other place\n        this.disableFocusEvent = true;\n        this.emailBody.nativeElement.focus();\n\n        this.disableFocusEvent = false;\n    }\n\n}\n","/*\n * Public API Surface of ngx-email-composer\n */\n\nexport * from './lib/ngx-email-composer.module';\nexport * from './lib/shared/email-composer-abstract.component';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}