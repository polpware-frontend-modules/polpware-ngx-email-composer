{"version":3,"file":"polpware-ngx-email-composer.mjs","sources":["../../../../projects/polpware/ngx-email-composer/src/lib/ngx-email-composer.module.ts","../../../../projects/polpware/ngx-email-composer/src/lib/shared/email-composer-abstract.component.ts","../../../../projects/polpware/ngx-email-composer/src/public-api.ts","../../../../projects/polpware/ngx-email-composer/src/polpware-ngx-email-composer.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { TagInputModule } from 'ngx-chips';\n\n@NgModule({\n    declarations: [],\n    imports: [\n        TagInputModule\n    ],\n    exports: []\n})\nexport class NgxEmailComposerModule { }\n","import { ElementRef, ViewChild, Input, Output, EventEmitter, Directive } from '@angular/core';\nimport { TagInputComponent } from 'ngx-chips';\nimport { Observable } from 'rxjs';\n\nexport function isValidEmail(control: { value: any }) {\n    const value = control.value;\n    const re = /\\S+@\\S+\\.\\S+/;\n    if (re.test(value)) {\n        return null;\n    }\n    return {\n        'isValidEmail': true\n    };\n}\n\nfunction display_name(text: string) {\n    /* Remove all quotes \n       Remove whitespace, brackets, and commas from the ends. */\n    return text.replace(/(^[\\s,>]+)|\"|([\\s,<]+$)/g, '');\n}\n\nconst EmailPattern = /[a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*/g;\n\n/**\n * Parses the given string into an array of email entries.\n * Each entry is like user<user@gmail.com>\n * @param addr_list\n */\nexport function parseEmails(addr_list: string) {\n    /* Regex source:\n        https://html.spec.whatwg.org/multipage/forms.html#valid-e-mail-address\n    */\n    const emails = [];\n    let idx = 0;\n    let match: RegExpExecArray;\n    while (match = EmailPattern.exec(addr_list)) {\n        let display: string;\n        if (display = display_name(addr_list.substring(idx, match['index']))) {\n            emails.push('\"' + display + '\" ' + '<' + match[0] + '>');\n        }\n        else {\n            emails.push(match[0]);\n        }\n        idx = match['index'] + match[0].length;\n    }\n    return emails;\n}\n\n/**\n * Parses the given string into a list of email entries.\n * Each entry is just an email.\n * @param addr_list\n */\nexport function parseOnlyEmails(addr_list: string) {\n    const emails = [];\n    let match: RegExpExecArray;\n    while (match = EmailPattern.exec(addr_list)) {\n        emails.push(match[0]);\n    }\n    return emails;\n}\n\nexport interface IAutoCompleteModel {\n    value: any;\n    display: string;\n}\n\nexport enum AlertTypeEnum {\n    none = 0,\n    info = 1,\n    warning = 2,\n    running = 3,\n    success = 4,\n    error = 5\n}\n\nexport interface IEmailSenderInput {\n    confirmed?: boolean;\n    emailReceivers?: string[];\n    emailBody?: string;\n    emailTitle?: string;\n    succeed?: boolean;\n}\n\nexport interface IEmailComposerInput {\n    messageTitle?: string;\n    messageBody?: string;\n    autocompleteItemsAsync: Observable<Array<IAutoCompleteModel>>;\n    emails?: Array<any>;\n}\n\n@Directive()\nexport abstract class EmailFormAbstractComponent {\n\n    @ViewChild('emailInputBox') emailInputBox: TagInputComponent;\n    @ViewChild('emailBody') emailBody: ElementRef;\n\n    @Input()\n    public messageTitle: string;\n    @Input()\n    public messageBody: string;\n    @Input()\n    autocompleteItemsAsync: Observable<Array<IAutoCompleteModel>>;\n    @Input()\n    sender: (a: IEmailSenderInput) => Promise<any>;\n    @Output()\n    onTextChange = new EventEmitter();\n    @Output()\n    onSubmit = new EventEmitter<IEmailSenderInput>();\n    @Output()\n    onSent = new EventEmitter<{ success: boolean }>();\n\n    alertMessage: string;\n    alertSubMessage: string;\n    alertType: AlertTypeEnum;\n    alertDismissible: boolean;\n\n    public emails: Array<any>;\n    public validators = [isValidEmail];\n    public errorMessages = {\n        'isValidEmail': 'Please input a valid email'\n    };\n\n    // Control over the close button\n    public showCloseBtn: boolean;\n\n    private disableFocusEvent: boolean;\n\n    constructor() {\n\n        this.messageTitle = '';\n        this.emails = [];\n        this.messageBody = '';\n\n        this.disableFocusEvent = false;\n    }\n\n    public get isSubmitDisabled(): boolean {\n        return this.emails.length === 0 || this.alertType === AlertTypeEnum.running;\n    }\n\n    public textChanged(evt: any) {\n        this.showCloseBtn = false;\n        this.onTextChange.emit(evt);\n    }\n\n    public otherFieldChanged() {\n        this.showCloseBtn = false;\n    }\n\n    public submit() {\n        const emails = [];\n\n        this.emails.forEach(elem => {\n\n            let x = elem || (elem.value);\n            const y = parseOnlyEmails(x);\n            y.forEach(m => {\n                emails.push(m);\n            });\n        });\n\n        const outputs: IEmailSenderInput = {\n            confirmed: true,\n            emailReceivers: emails,\n            emailBody: this.messageBody,\n            emailTitle: this.messageTitle\n        };\n\n        if (this.sender) {\n            this.alertType = AlertTypeEnum.running;\n            this.alertMessage = 'The email is being sent out ...';\n            this.alertSubMessage = '';\n            this.alertDismissible = false;\n\n            this.sender(outputs).then(() => {\n                this.alertType = AlertTypeEnum.info;\n                this.alertMessage = 'Emails have been successfully sent out.';\n                this.alertDismissible = true;\n                this.showCloseBtn = true;\n\n                this.onSent && this.onSent.emit({ success: true });\n            }, (error) => {\n                this.alertType = AlertTypeEnum.error;\n                this.alertMessage = 'Something went wrong.';\n                this.alertDismissible = true;\n                this.alertSubMessage = (error && error.errorInfo) ? error.errorInfo : '';\n                this.onSent && this.onSent.emit({ success: false });\n            });\n        }\n\n        this.onSubmit && this.onSubmit.emit(outputs);\n    }\n\n    public onOutOfTagInput(evt: any) {\n\n        if (this.emailInputBox.dropdown && this.emailInputBox.dropdown.isVisible) {\n            return;\n        }\n\n        if (this.disableFocusEvent) {\n            return;\n        }\n\n        evt.preventDefault();\n        evt.stopPropagation();\n\n        // A tempory hack for fixing the focus issue\n        // on invoking the onAddingRequested method ...\n        const emails = parseEmails(this.emailInputBox.formValue);\n\n        emails.forEach(v => {\n            this.emails.push(v);\n        });\n\n        this.emailInputBox.setInputValue('');\n\n        // Jump to other place\n        this.disableFocusEvent = true;\n        this.emailBody.nativeElement.focus();\n\n        this.disableFocusEvent = false;\n    }\n\n}\n","/*\n * Public API Surface of ngx-email-composer\n */\n\nexport * from './lib/ngx-email-composer.module';\nexport * from './lib/shared/email-composer-abstract.component';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}